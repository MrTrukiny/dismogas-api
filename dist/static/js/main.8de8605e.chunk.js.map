{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/services/ServiceSummary.js","components/services/ServiceList.js","components/dashboard/Dashboard.js","components/services/ServiceDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/services/CreateService.js","store/actions/serviceActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/serviceReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ServiceSummary","_ref","service","title","authorFirstName","authorLastName","createdAt","calendar","ServiceList","services","concat","services_ServiceSummary","Dashboard","_this$props","this","services_ServiceList","dashboard_Notifications","react_router","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateService","createService","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ServiceDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","serviceReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8de8605e.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = (props) => {\n\treturn (\n\t\t<ul className=\"right\">\n\t\t\t<li><NavLink to='/create'>Nuevo Servicio</NavLink></li>\n\t\t\t<li><NavLink to='/' onClick={props.signOut}>Salir</NavLink></li>\n\t\t\t<li><NavLink to='/' className=\"btn btn-floating green lighten-1\">{props.profile.initials}</NavLink></li>\n\t\t</ul>\n\t)\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsignOut: () => dispatch(signOut())\n\t}\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n\treturn (dispatch, getState, { getFirebase }) => {\n\t\tconst firebase = getFirebase();\n\n\t\tfirebase.auth().signInWithEmailAndPassword(\n\t\t\tcredentials.email,\n\t\t\tcredentials.password\n\t\t).then(() => {\n\t\t\tdispatch({ type: 'LOGIN_SUCCESS'});\n\t\t}).catch((err) => {\n\t\t\tdispatch({ type: 'LOGIN_ERROR', err });\n\t\t});\n\t}\n}\n\nexport const signOut = () => {\n\treturn (dispatch, getState, { getFirebase }) => {\n\t\tconst firebase = getFirebase();\n\n\t\tfirebase.auth().signOut().then(() => {\n\t\t\tdispatch({ type: 'SIGNOUT_SUCCESS' });\n\t\t});\n\t}\n}\n\nexport const signUp = (newUser) => {\n\treturn (dispatch, getState, { getFirebase, getFirestore }) => {\n\t\tconst firebase = getFirebase();\n\t\tconst firestore = getFirestore();\n\n\t\tfirebase.auth().createUserWithEmailAndPassword(\n\t\t\tnewUser.email,\n\t\t\tnewUser.password\n\t\t).then((res) => {\n\t\t\treturn firestore.collection('users').doc(res.user.uid).set({\n\t\t\t\tfirstName: newUser.firstName,\n\t\t\t\tlastName: newUser.lastName,\n\t\t\t\tinitials: newUser.firstName[0] + newUser.lastName[0]\n\t\t\t})\n\t\t}).then(() => {\n\t\t\tdispatch({ type: 'SIGHUP_SUCCESS'});\n\t\t}).catch(err => {\n\t\t\tdispatch({ type: 'SIGNUP_ERROR', err })\n\t\t})\n\t}\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n\treturn (\n\t\t<ul className=\"right\">\n\t\t\t<li><NavLink to='/signup'>Registrarse</NavLink></li>\n\t\t\t<li><NavLink to='/signin'>Ingresar</NavLink></li>\n\t\t</ul>\n\t)\n}\n\nexport default SignedOutLinks","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n\tconst { auth, profile } = props;\n\t// console.log(auth)\n\tconst links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n\treturn (\n\t\t<nav className=\"nav-wrapper yellow darken-3\">\n\t\t\t<div className=\"container\">\n\t\t\t\t<Link to=\"/\" className=\"brand-logo\">Dismogas</Link>\n\t\t\t\t{ links }\n\t\t\t</div>\n\t\t</nav>\n\t)\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tauth: state.firebase.auth,\n\t\tprofile: state.firebase.profile\n\t}\n}\nexport default connect(mapStateToProps)(Navbar)","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications = (props) => {\n\tconst { notifications } = props;\n\treturn (\n\t\t<div className=\"section\">\n\t\t\t<div className=\"card z-depth-0\">\n\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t<span className=\"card-title\">Notifications</span>\n\t\t\t\t\t<ul className=\"notifications\">\n\t\t\t\t\t\t{ notifications && notifications.map(item => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<li key={item.id}>\n\t\t\t\t\t\t\t\t\t<span className=\"pink-text\">{item.user} </span>\n\t\t\t\t\t\t\t\t\t<span>{item.content}</span>\n\t\t\t\t\t\t\t\t\t<div className=\"grey-text note-date\">\n\t\t\t\t\t\t\t\t\t\t{moment(item.time.toDate()).fromNow()}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Notifications;\n\n","import React from 'react';\nimport moment from 'moment';\n\nconst ServiceSummary = ({service}) => {\n\treturn (\n\t\t<div className=\"card z-depth-0 service-summary\">\n\t\t\t<div className=\"card-content grey-text text-darken-3\">\n\t\t\t\t<span className=\"card-title\">{service.title}</span>\n\t\t\t\t<p>Creado por {service.authorFirstName} {service.authorLastName}</p>\n\t\t\t\t<p className=\"grey-text\">{moment(service.createdAt.toDate()).calendar()}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default ServiceSummary;","import React from 'react';\nimport ServiceSummary from './ServiceSummary';\nimport { Link } from 'react-router-dom';\n\nconst ServiceList = ({services}) => {\n\treturn (\n\t\t<div className=\"service-list section\">\n\t\t\t{ services && services.map(service => {\n\t\t\t\treturn (\n\t\t\t\t\t<Link to={`/service/${service.id}`} key={service.id}>\n\t\t\t\t\t\t<ServiceSummary service={service} key={service.id} />\n\t\t\t\t\t</Link>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nexport default ServiceList;","import React, { Component } from 'react';\nimport Notifications from './Notifications'\nimport ServiceList from '../services/ServiceList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n\trender () {\n\t\t// console.log(this.props)\n\t\tconst { services, auth, notifications } = this.props;\n\t\tif (!auth.uid) return <Redirect to='signin' />\n\t\t\n\t\treturn (\n\t\t\t<div className=\"dashboard container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col s12 m6\">\n\t\t\t\t\t\t<ServiceList services={services} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col s12 m5 offset-m1\">\n\t\t\t\t\t\t<Notifications notifications={notifications} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\tconsole.log(state)\n\treturn {\n\t\tservices: state.firestore.ordered.services,\n\t\tauth: state.firebase.auth,\n\t\tnotifications: state.firestore.ordered.notifications\n\t}\n}\n\nexport default compose(\n\tconnect(mapStateToProps),\n\tfirestoreConnect([\n\t\t{ collection: 'services', orderBy: ['createdAt', 'desc'] },\n\t\t{ collection: 'notifications', limit: 4, orderBy: ['time', 'desc'] }\n\t])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment';\n\n\nconst ServiceDetails = (props) => {\n\tconst { service, auth } = props;\n\tif (!auth.uid) return <Redirect to='signin' />\n\n\tif (service) {\n\t\treturn (\n\t\t\t<div className=\"container section service-details\">\n\t\t\t\t<div className=\"card z-depth-0\">\n\t\t\t\t\t<div className=\"card-content\">\n\t\t\t\t\t\t<span className=\"card-title\">{ service.title }</span>\n\t\t\t\t\t\t<p>{ service.content }</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-action grey lighten-4 grey-text\">\n\t\t\t\t\t\t<div>Creador por { service.authorFirstName } { service.authorLastName }</div>\n\t\t\t\t\t\t<div>{moment(service.createdAt.toDate()).calendar()}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t} else {\n\t\treturn (\n\t\t\t<div className=\"container center\">\n\t\t\t\t<p>Loandin services...</p>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state, ownProps) => {\n\tconsole.log(state)\n\tconst id = ownProps.match.params.id;\n\tconst services = state.firestore.data.services;\n\tconst service = services ? services[id] : null\n\treturn {\n\t\tservice: service,\n\t\tauth: state.firebase.auth\n\t}\t\n}\n\nexport default compose(\n\tconnect(mapStateToProps),\n\tfirestoreConnect([\n\t\t{ collection: 'services' }\n\t])\n)(ServiceDetails)\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { signIn } from '../../store/actions/authActions';\nimport { Redirect } from 'react-router-dom';\n\nclass SignIn extends Component {\n\tstate = {\n\t\temail: \"\",\n\t\tpassword: \"\"\n\t}\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.id]: e.target.value\n\t\t});\n\t}\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.signIn(this.state)\n\t}\n\trender() {\n\t\tconst { authError, auth } = this.props;\n\t\tif (auth.uid) return <Redirect to='/' />\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Iniciar sesión</h5>\n\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t<label htmlFor=\"email\">Correo</label>\n\t\t\t\t\t\t<input type=\"email\" id=\"email\" onChange={this.handleChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t<label htmlFor=\"password\">Contraseña</label>\n\t\t\t\t\t\t<input type=\"password\" id=\"password\" onChange={this.handleChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t<button className=\"btn green lighten-1\">Ingresar</button>\n\t\t\t\t\t\t<div className=\"red-text center\">\n\t\t\t\t\t\t\t{ authError ? <p>{authError}</p> : null }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tauthError: state.auth.authError,\n\t\tauth: state.firebase.auth\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsignIn: (creds) => dispatch(signIn(creds))\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n\tstate = {\n\t\temail: \"\",\n\t\tpassword: \"\",\n\t\tfirstName: \"\",\n\t\tlastName: \"\"\n\t}\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.id]: e.target.value\n\t\t});\n\t}\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.signUp(this.state)\n\t}\n\trender() {\n\t\tconst { auth, authError } = this.props;\n\t\tif (auth.uid) return <Redirect to='/' />\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Registro</h5>\n\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t<label htmlFor=\"email\">Correo</label>\n\t\t\t\t\t\t<input type=\"email\" id=\"email\" onChange={this.handleChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t<label htmlFor=\"password\">Contraseña</label>\n\t\t\t\t\t\t<input type=\"password\" id=\"password\" onChange={this.handleChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t<label htmlFor=\"firstName\">Nombre</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n\t\t\t\t\t</div><div className=\"input-field\">\n\t\t\t\t\t\t<label htmlFor=\"lastName\">Apellido</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t<button className=\"btn green lighten-1\">Registrarse</button>\n\t\t\t\t\t\t<div className=\"red-text center\">\n\t\t\t\t\t\t\t{ authError ? <p>{ authError }</p> : null }\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tauth: state.firebase.auth,\n\t\tauthError: state.auth.authError\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tsignUp: (newUser) => dispatch(signUp(newUser))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createService } from '../../store/actions/serviceActions';\nimport { Redirect } from 'react-router-dom'\n\nclass CreateService extends Component {\n\tstate = {\n\t\ttitle: \"\",\n\t\tcontent: \"\"\n\t}\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.id]: e.target.value\n\t\t});\n\t}\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\t// console.log(this.state)\n\t\tthis.props.createService(this.state)\n\t\tthis.props.history.push('/');\n\t}\n\trender() {\n\t\tconst { auth } = this.props;\n\t\tif (!auth.uid) return <Redirect to='signin' />\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"white\">\n\t\t\t\t\t<h5 className=\"grey-text text-darken-3\">Nuevo Servicio</h5>\n\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t<label htmlFor=\"title\">Título</label>\n\t\t\t\t\t\t<input type=\"text\" id=\"title\" onChange={this.handleChange} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t<label htmlFor=\"content\">Contenido del servicio</label>\n\t\t\t\t\t\t<textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"input-field\">\n\t\t\t\t\t\t<button className=\"btn green lighten-1\">Crear servicio</button>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tauth: state.firebase.auth\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tcreateService: (service) => dispatch(createService(service))\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateService)\n","export const createService = (service) => {\n\treturn (dispatch, getState, { getFirebase, getFirestore }) => {\n\t\t// make async call to database\n\t\tconst firestore = getFirestore();\n\t\tconst profile = getState().firebase.profile;\n\t\tconst authorId = getState().firebase.auth.uid;\n\n\t\tfirestore.collection('services').add({\n\t\t\t...service,\n\t\t\tauthorFirstName: profile.firstName,\n\t\t\tauthorLastName: profile.lastName,\n\t\t\tauthorId: authorId,\n\t\t\tcreatedAt: new Date()\n\t\t}).then(() => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'CREATE_SERVICE',\n\t\t\t\tservice\n\t\t\t});\n\t\t}).catch((err) => {\n\t\t\tdispatch({\n\t\t\t\ttype: 'CREATE_SERVICE_ERROR',\n\t\t\t\terr\n\t\t\t});\n\t\t})\n\t}\n};","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ServiceDetails from './components/services/ServiceDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateService from './components/services/CreateService';\n\nconst App = () => {\n  return (\n\t\t<BrowserRouter>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navbar />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/' component={Dashboard} />\n\t\t\t\t\t<Route path='/service/:id' component={ServiceDetails} />\n\t\t\t\t\t<Route path='/signin' component={SignIn} />\n\t\t\t\t\t<Route path='/signup' component={SignUp} />\n\t\t\t\t\t<Route path='/create' component={CreateService} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</BrowserRouter>\n  );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n\tauthError: null\n};\n\nconst authReducer = (state = initState, action) => {\n\tswitch(action.type) {\n\t\tcase 'LOGIN_ERROR':\n\t\t\tconsole.log('login error');\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: 'Login failed'\n\t\t\t}\n\t\tcase 'LOGIN_SUCCESS':\n\t\t\tconsole.log('login success');\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: null\n\t\t\t}\n\t\tcase 'SIGNOUT_SUCCESS':\n\t\t\tconsole.log('signout success');\n\t\t\treturn state;\n\t\tcase 'SIGNUP_SUCCESS':\n\t\t\tconsole.log('signup succes');\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauthError: null\n\t\t\t}\n\t\t\tcase 'SIGNUP_ERROR':\n\t\t\t\tconsole.log('signup errpr')\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tauthError: action.err.message\n\t\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default authReducer","const initState = {\n\tservices: [\n\t\t{id: '1', title: 'I love you', content: 'blah, blah, blah'},\n\t\t{id: '2', title: 'I do not love you', content: 'blah, blah, blah'},\n\t\t{id: '3', title: 'I miss you', content: 'blah, blah, blah'}\n\t]\n};\n\nconst serviceReducer = (state = initState, action) => {\n\tswitch(action.type) {\n\t\tcase 'CREATE_SERVICE':\n\t\t\tconsole.log('service created', action.service);\n\t\t\treturn state;\n\t\tcase 'CREATE_PROJECT_ERROR':\n\t\t\tconsole.log('create service error', action.err);\n\t\t\treturn state;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default serviceReducer;","import authReducer from './authReducer';\nimport serviceReducer from './serviceReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n\tauth: authReducer,\n\tservice: serviceReducer,\n\tfirestore: firestoreReducer,\n\tfirebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n\tapiKey: \"AIzaSyDX725S3UGUW4YlACx74eIl61tpItih2pc\",\n\tauthDomain: \"dismogas.firebaseapp.com\",\n\tdatabaseURL: \"https://dismogas.firebaseio.com\",\n\tprojectId: \"dismogas\",\n\tstorageBucket: \"\",\n\tmessagingSenderId: \"302754116170\",\n\tappId: \"1:302754116170:web:480e989ada8856b9\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n/* @firebase/firestore: Firestore (6.3.5): \n  The timestampsInSnapshots setting now defaults to true and you no\n  longer need to explicitly set it. In a future release, the setting\n  will be removed entirely and so it is recommended that you remove it\n\tfrom your firestore.settings() call now. */\n\t\n// firebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer, \n\tcompose( \n\t\tapplyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n\t\treduxFirestore(fbConfig),\n\t\treactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true })\n\t)\n);\n\nstore.firebaseAuthIsReady.then(() => {\n\tReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n})\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}